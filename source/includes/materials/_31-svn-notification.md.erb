## Notify SVN materials

```shell
$ curl 'https://ci.example.com/go/api/admin/materials/svn/notify' \
      -u 'username:password' \
      -H 'Accept: <%= data.apis.versions.materials %>' \
      -X POST \
      -d 'uuid=svn-repository-uuid'
```

> The above command returns the following response:

```http
HTTP/1.1 202 Accepted
Content-Type: application/json; charset=UTF-8
```

```json
{"message": "The material is now scheduled for an update. Please check relevant pipeline(s) for status."}
```

<%= partial 'includes/shared/material_notify_header' %>

<%= updated_to(1,'19.4.0') %>
<%= available_since('14.3.0') %>

<p class='http-request-heading'>HTTP Request</p>

`POST /go/api/admin/materials/svn/notify`


The following json payload must be specified.

<%=
  describe_object(nil) do
    uuid  'String',            'The subversion repository UUID'
  end
 %>

<p class='http-request-return-description'>Returns</p>

A confirmation message.

### Notification script

To notify GoCD via a SVN post commit hook, you may use the following post commit hook in your subversion repository.

The post commit hook is located at `/path/to/repository/hooks/post-commit`.

```bash
#!/bin/sh

REPOS="$1"
REV="$2"
UUID=$(svnlook uuid $1)

curl 'https://ci.example.com/go/api/admin/materials/svn/notify' \
    -u 'username:password' \
    -H 'Accept: <%= data.apis.versions.materials %>' \
    -H 'Content-Type: application/json'
    -X POST \
    -d {"uuid": "$UUID"}
```
